# -----------------------------------------------------------------------------
# File: .github/workflows/cicd_pipeline.yml
# Purpose: GitHub Actions Workflow for Databricks CI/CD Pipeline with Asset Bundles & OIDC Auth
# Triggers on workflow_dispatch and pushes to main. Fully parameterized for enterprise use.
# -----------------------------------------------------------------------------

name: Databricks CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Set all OIDC/Databricks credentials from GitHub Secrets (required by Databricks CLI)
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_DEV }}        # Required by Databricks CLI
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}            # OIDC credential
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}     # OIDC credential
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}            # OIDC credential
      # Optional custom paths for bundle (not used by CLI)
      ROOT_PATH_DEV: ${{ secrets.ROOT_PATH_DEV }}
      FILE_PATH_DEV: ${{ secrets.FILE_PATH_DEV }}

    steps:
      # -------------------------------------------------------------
      # Step 1: Checkout repository
      # -------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------------------------------------
      # Step 2: Setup Databricks CLI v2
      # -------------------------------------------------------------
      - name: Setup Databricks CLI v2
        uses: databricks/setup-cli@main

      # -------------------------------------------------------------
      # Step 3: Print debug envs (safe to remove in prod)
      # -------------------------------------------------------------
      - name: Print debug envs
        run: |
          echo "DATABRICKS_HOST=$DATABRICKS_HOST"
          echo "AZURE_CLIENT_ID=$AZURE_CLIENT_ID"
          echo "AZURE_TENANT_ID=$AZURE_TENANT_ID"
          # Do not echo secrets in real prod!
      
      # -------------------------------------------------------------
      # Step 4: Validate Databricks Asset Bundle
      # -------------------------------------------------------------
      - name: Validate bundle configuration
        run: databricks bundle validate
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

      # -------------------------------------------------------------
      # Step 5: Deploy Asset Bundle to dev environment
      # -------------------------------------------------------------
      - name: Deploy bundle to dev (force lock)
        run: databricks bundle deploy --target dev --force-lock
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

      # -------------------------------------------------------------
      # Step 6: Run smoke test notebook via Databricks CLI
      # -------------------------------------------------------------
      - name: Run smoke test
        run: databricks bundle run smoke-test --target dev
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
